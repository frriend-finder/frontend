{"ast":null,"code":"var _jsxFileName = \"/Users/josephluna/Desktop/frontend/friend-finder/src/components/MemberList.js\";\nimport React, { Component } from 'react';\nimport MemberCard from './MemberCard';\nimport { connect } from 'react-redux';\nimport { addToFriends, fetchMembers, fetchInterests } from '../actions';\nimport LoaderComponent from './Loader';\nimport '../styles/MembersList.css';\n\nclass MemberList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      members: [],\n      friends: []\n    };\n    this.instance = \"memberlist\";\n\n    this.addToFriends = member => {\n      // Check our state to see if the friend was already added\n      const currentFriend = this.state.friends.find(f => f.id === member.id);\n\n      if (currentFriend) {\n        alert('Friend already exists');\n      } else {\n        this.props.addToFriends(member);\n        this.setState({\n          friends: [...this.state.friends, member]\n        }); // to make this work you need to implement this here or else the redux state will not update the state here as the component never reloads just with above Redux state update\n\n        alert(\"\".concat(member.firstName + \" \" + member.lastName, \" has been added to your Friends List!\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMembers(); //makes the axios call to fetch members\n\n    this.props.fetchInterests(); //makes the axios call to fetch interests\n\n    this.setState({\n      members: this.props.members,\n      friends: this.props.friends\n    });\n  }\n\n  render() {\n    return this.props.isFetchingMembers ? React.createElement(LoaderComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"members-list-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Members List\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Lets see who we can meet!\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"members-list-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.members.map(member => {\n      return React.createElement(MemberCard, {\n        member: member,\n        key: member.id,\n        addToFriends: this.addToFriends,\n        cardInstance: this.instance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    members: state.members,\n    friends: state.friends,\n    isFetchingMembers: state.isFetchingMembers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addToFriends,\n  fetchMembers,\n  fetchInterests\n})(MemberList);","map":{"version":3,"sources":["/Users/josephluna/Desktop/frontend/friend-finder/src/components/MemberList.js"],"names":["React","Component","MemberCard","connect","addToFriends","fetchMembers","fetchInterests","LoaderComponent","MemberList","state","members","friends","instance","member","currentFriend","find","f","id","alert","props","setState","firstName","lastName","componentDidMount","render","isFetchingMembers","map","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MemberCard from './MemberCard';\nimport { connect } from 'react-redux';\nimport { addToFriends, fetchMembers, fetchInterests } from '../actions';\nimport LoaderComponent from './Loader';\n\nimport '../styles/MembersList.css'\n\n\nclass MemberList extends Component {\n\n    state = {\n        members: [],\n        friends: []\n    }\n\n  instance = \"memberlist\" ;\n   \n\ncomponentDidMount(){\n\n    this.props.fetchMembers() //makes the axios call to fetch members\n    this.props.fetchInterests() //makes the axios call to fetch interests\n\n    this.setState({\n        members: this.props.members,\n        friends: this.props.friends\n    })\n}\n\n\naddToFriends = (member) => {\n    // Check our state to see if the friend was already added\n    const currentFriend = this.state.friends.find(f => f.id === member.id)\n    if(currentFriend){\n        alert('Friend already exists')\n    } else {\n        this.props.addToFriends(member) \n        this.setState({friends: [...this.state.friends, member]}) // to make this work you need to implement this here or else the redux state will not update the state here as the component never reloads just with above Redux state update\n        alert(`${member.firstName + \" \" + member.lastName} has been added to your Friends List!`)\n    }\n}\n\n\n    render() {\n        return (\n\n            this.props.isFetchingMembers? <LoaderComponent /> :\n                <>\n                    <div className = \"members-list-header\" >\n                    <h1>Members List</h1>\n                    <h2>Lets see who we can meet!</h2>\n                \n                    </div>\n                    <hr/>\n                    <div className= \"members-list-wrapper\">\n                   \n                            {\n\n                                this.props.members.map(member => {\n                                   return  <MemberCard member= {member} key={member.id} addToFriends = {this.addToFriends} cardInstance = {this.instance}/>\n\n                                })\n                            }\n                    \n                    </div>\n                </>            \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        members: state.members,\n        friends: state.friends,\n        isFetchingMembers: state.isFetchingMembers\n    }\n}\n\nexport default connect(mapStateToProps, {addToFriends, fetchMembers, fetchInterests})(MemberList);"]},"metadata":{},"sourceType":"module"}