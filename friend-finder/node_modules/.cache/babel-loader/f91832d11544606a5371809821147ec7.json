{"ast":null,"code":"import axios from 'axios';\nexport const LOGIN_START = \"LOGIN_START\";\nexport const ADD_NEW_USER_START = \"ADD_NEW_USER_START\";\nexport const ADD_NEW_USER_SUCCESS = \"ADD_NEW_USER_SUCCESS\";\nexport const ADD_NEW_USER_FAILURE = \"ADD_NEW_USER_FAILURE\";\nexport const ADD_TO_FRIENDS = \"ADD_TO_FRIENDS\";\nexport const FETCH_MEMBERS = \"GET_MEMBERS\";\nexport const FETCH_MEMBERS_SUCCESS = \"GET_MEMBERS_SUCCESS\";\nexport const FETCH_MEMBERS_FAILURE = \"GET_MEMBERS_FAILURE\";\nexport const FETCH_INTERESTS = \"FETCH_INTERESTS\";\nexport const FETCH_INTERESTS_SUCCESS = \"FETCH_INTERESTS_SUCCESS\";\nexport const FETCH_INTERESTS_FAILURE = \"FETCH_INTERESTS_FAILURE\";\nexport const FETCH_USER_INTERESTS = \"FETCH_USER_INTERESTS\";\nexport const FETCH_USER_INTERESTS_SUCCESS = \"FETCH_USER_INTERESTS_SUCCESS\";\nexport const FETCH_USER_INTERESTS_FAILURE = \"FETCH_USER_INTERESTS_FAILURE\";\nexport const login = creds => dispatch => {\n  dispatch({\n    type: LOGIN_START\n  });\n  return axios.post().then(res => localStorage.setItem('token', 'faketoken123')).catch(err => console.log(err));\n};\nexport const addNewUser = user => dispatch => {\n  dispatch({\n    type: ADD_NEW_USER_START\n  });\n  return axios.post('https://friendfinder-bw19.herokuapp.com/user/', user).then(res => dispatch({\n    type: ADD_NEW_USER_SUCCESS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: ADD_NEW_USER_FAILURE,\n    payload: err.data\n  }));\n};\nexport const fetchMembers = () => dispatch => {\n  dispatch({\n    type: FETCH_MEMBERS\n  });\n  axios.get('https://friendfinder-bw19.herokuapp.com/user').then(res => setTimeout(() => {\n    dispatch({\n      type: FETCH_MEMBERS_SUCCESS,\n      payload: res.data\n    });\n  }, 2000)).catch(err => dispatch({\n    type: FETCH_MEMBERS_FAILURE,\n    payload: err\n  }));\n};\nexport const fetchInterests = () => dispatch => {\n  dispatch({\n    type: FETCH_INTERESTS\n  });\n  axios.get('https://friendfinder-bw19.herokuapp.com/interests/').then(res => dispatch({\n    type: FETCH_INTERESTS_SUCCESS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FETCH_INTERESTS_FAILURE,\n    payload: err\n  }));\n};\nexport const fetchUserInterests = id => dispatch => {\n  dispatch({\n    type: FETCH_USER_INTERESTS\n  });\n  axios.get(\"https://friendfinder-bw19.herokuapp.com/interests/user/\".concat(id)).then(res => dispatch({\n    type: FETCH_USER_INTERESTS_SUCCESS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: FETCH_USER_INTERESTS_FAILURE,\n    payload: err\n  }));\n};\nexport const addToFriends = member => {\n  console.log('Member in action', member);\n  return {\n    type: ADD_TO_FRIENDS,\n    payload: member\n  };\n};","map":{"version":3,"sources":["/Users/josephluna/Desktop/frontend/friend-finder/src/actions/index.js"],"names":["axios","LOGIN_START","ADD_NEW_USER_START","ADD_NEW_USER_SUCCESS","ADD_NEW_USER_FAILURE","ADD_TO_FRIENDS","FETCH_MEMBERS","FETCH_MEMBERS_SUCCESS","FETCH_MEMBERS_FAILURE","FETCH_INTERESTS","FETCH_INTERESTS_SUCCESS","FETCH_INTERESTS_FAILURE","FETCH_USER_INTERESTS","FETCH_USER_INTERESTS_SUCCESS","FETCH_USER_INTERESTS_FAILURE","login","creds","dispatch","type","post","then","res","localStorage","setItem","catch","err","console","log","addNewUser","user","payload","data","fetchMembers","get","setTimeout","fetchInterests","fetchUserInterests","id","addToFriends","member"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const LOGIN_START = \"LOGIN_START\";\nexport const ADD_NEW_USER_START = \"ADD_NEW_USER_START\";\nexport const ADD_NEW_USER_SUCCESS = \"ADD_NEW_USER_SUCCESS\";\nexport const ADD_NEW_USER_FAILURE = \"ADD_NEW_USER_FAILURE\";\nexport const ADD_TO_FRIENDS = \"ADD_TO_FRIENDS\";\nexport const FETCH_MEMBERS = \"GET_MEMBERS\";\nexport const FETCH_MEMBERS_SUCCESS = \"GET_MEMBERS_SUCCESS\";\nexport const FETCH_MEMBERS_FAILURE = \"GET_MEMBERS_FAILURE\";\nexport const FETCH_INTERESTS = \"FETCH_INTERESTS\";\nexport const FETCH_INTERESTS_SUCCESS = \"FETCH_INTERESTS_SUCCESS\";\nexport const FETCH_INTERESTS_FAILURE = \"FETCH_INTERESTS_FAILURE\";\nexport const FETCH_USER_INTERESTS = \"FETCH_USER_INTERESTS\"; \nexport const FETCH_USER_INTERESTS_SUCCESS = \"FETCH_USER_INTERESTS_SUCCESS\";\nexport const FETCH_USER_INTERESTS_FAILURE = \"FETCH_USER_INTERESTS_FAILURE\";\n\nexport const login = creds => dispatch => {\n    dispatch({ type: LOGIN_START });\n    return axios\n        .post()\n        .then(res => localStorage.setItem('token', 'faketoken123'))\n        .catch(err => console.log(err));\n}\n\nexport const addNewUser = (user) => dispatch => {\n    dispatch({ type: ADD_NEW_USER_START })\n    return axios\n        .post('https://friendfinder-bw19.herokuapp.com/user/', user)\n        .then(res => dispatch({ type: ADD_NEW_USER_SUCCESS, payload: res.data }))\n        .catch(err => dispatch({ type: ADD_NEW_USER_FAILURE, payload: err.data }));\n}\n\nexport const fetchMembers = () => dispatch => {\n    dispatch({type: FETCH_MEMBERS});\n    axios.get('https://friendfinder-bw19.herokuapp.com/user')\n    .then(res => setTimeout(()=>{dispatch({type: FETCH_MEMBERS_SUCCESS, payload: res.data})},2000))\n    .catch(err => dispatch({type:FETCH_MEMBERS_FAILURE, payload: err}))\n}   \n\nexport const fetchInterests = () => dispatch => {\n    dispatch({type: FETCH_INTERESTS})\n    axios.get('https://friendfinder-bw19.herokuapp.com/interests/')\n    .then(res => dispatch({type:FETCH_INTERESTS_SUCCESS, payload:res.data}))\n    .catch(err => dispatch({type:FETCH_INTERESTS_FAILURE, payload: err}))\n}\n\n\nexport const fetchUserInterests = (id) =>  dispatch => {\n    dispatch({type: FETCH_USER_INTERESTS})\n    axios.get(`https://friendfinder-bw19.herokuapp.com/interests/user/${id}`)\n    .then(res => dispatch({type: FETCH_USER_INTERESTS_SUCCESS, payload: res.data}))\n    .catch(err => dispatch({type: FETCH_USER_INTERESTS_FAILURE, payload: err}))\n}\n\n\nexport const addToFriends = member =>{ \n    console.log('Member in action',member)\n        return({\n            type: ADD_TO_FRIENDS,\n            payload: member\n        })\n}\n"]},"metadata":{},"sourceType":"module"}